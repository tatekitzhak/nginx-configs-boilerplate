user www-data;
worker_processes auto;
pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections  768;  ## Default: 1024
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  #include /etc/nginx/mime.types;
  #default_type application/octet-stream;

  ##
  # SSL Settings
  ##

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;

  # gzip_vary on;
  # gzip_proxied any;
  # gzip_comp_level 6;
  # gzip_buffers 16 8k;
  # gzip_http_version 1.1;
  # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  ##
  # Virtual Host Configs
  ##

  #include /etc/nginx/conf.d/*.conf;
  #include /etc/nginx/sites-enabled/*;


  upstream backend {
    least_conn;
    server http://localhost:8080;
  }

  upstream frontend {
    least_conn;
    server http://localhost:8000;
  }


  # Serve reverse-proxy for http 80
  server { 
    listen       80;
    # listen  [::]:80;
    server_name  localhost;
    # access_log   logs/server.access.log  main buffer=32k;
    # error_log   /var/log/nginx/error.log;

    ##
    # basic sanity checks
    ##
    server_tokens           off; # don't send server version in headers
    ignore_invalid_headers  on;
    underscores_in_headers  off;

     #pass requests for dynamic content to rails/turbogears/zope, et al
    set $alb "<!DOCTYPE html><h2>gangnam style!</h2>\n";
    set $html_page "<html> <body> <h1>Hello, World!</h1> <p>This is an example website running on NGINX.</p> </body> </html>";

    location / {
      # proxy_pass      http://localhost:8000;
      default_type text/html;
      return 200 $html_page;
    }

    location /api {
      return 200 $alb;
    }
  }

  # Serve reverse-proxy for https 443 ssl
  # server {
  #   listen       443 ssl http2;
  #   listen       [::]:443 ssl http2;
  #   server_name  your.domain;

  #   access_log  /var/log/nginx/access.log;
  #   error_log   /var/log/nginx/error.log;

  #   ssl_certificate "/etc/letsencrypt/live/your.domain/fullchain.pem";
  #   ssl_certificate_key "/etc/letsencrypt/live/your.domain/privkey.pem";
  #   ssl_protocols TLSv1.2 TLSv1.3;
  #   ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
  #   keepalive_timeout   60;

  #   ssl_session_cache shared:SSL:1m;
  #   ssl_session_timeout  10m;
  #   ssl_prefer_server_ciphers on;


  #   location / {
  #       proxy_pass http://localhost:8000;

  #       proxy_set_header    Host            $host;
  #       proxy_set_header    X-Real-IP       $remote_addr;
  #       proxy_set_header    X-Forwarded-Host $http_host;
  #       proxy_set_header    X-Forwarded-Server $host;
  #       proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
  #       proxy_set_header    X-Forwarded-Proto https;
  #       proxy_set_header    Front-End-Https On;
  #   }
  # }
}