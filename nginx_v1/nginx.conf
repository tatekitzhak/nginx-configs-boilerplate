# user       www www;  ## Default: nobody
# worker_processes  5;  ## Default: 1
# error_log  logs/error.log warn;
# pid        logs/nginx.pid;
# worker_rlimit_nofile 8192; # set e.g. `nofile 16000` in `/etc/security/limits.d/*`

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  # access_log   logs/http.access.log  main buffer=32k;

  # Serve reverse-proxy for http 80
  server { 
    listen       80;
    server_name  localhost;
    # access_log   logs/server.access.log  main buffer=32k;
    # error_log   /var/log/nginx/error.log;

    # basic sanity checks
    server_tokens           off; # don't send server version in headers
    ignore_invalid_headers  on;
    underscores_in_headers  off;

    # pass requests for dynamic content to rails/turbogears/zope, et al
    set $alb "<!DOCTYPE html><h2>gangnam style!</h2>\n";
    location / {
      # proxy_pass      http://localhost:8000;
      default_type text/html;
      return 200 "<!DOCTYPE html><h2>gangnam style!</h2>\n";

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }

  # Serve reverse-proxy for https 443 ssl
  # server {
  #   listen       443 ssl http2;
  #   listen       [::]:443 ssl http2;
  #   server_name  your.domain;

  #   access_log  /var/log/nginx/access.log;
  #   error_log   /var/log/nginx/error.log;

  #   ssl_certificate "/etc/letsencrypt/live/your.domain/fullchain.pem";
  #   ssl_certificate_key "/etc/letsencrypt/live/your.domain/privkey.pem";
  #   ssl_protocols TLSv1.2 TLSv1.3;
  #   ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
  #   keepalive_timeout   60;

  #   ssl_session_cache shared:SSL:1m;
  #   ssl_session_timeout  10m;
  #   ssl_prefer_server_ciphers on;


  #   location / {
  #       proxy_pass http://localhost:8000;

  #       proxy_set_header    Host            $host;
  #       proxy_set_header    X-Real-IP       $remote_addr;
  #       proxy_set_header    X-Forwarded-Host $http_host;
  #       proxy_set_header    X-Forwarded-Server $host;
  #       proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
  #       proxy_set_header    X-Forwarded-Proto https;
  #       proxy_set_header    Front-End-Https On;
  #   }
  # }
}